#Â File generated by aws2tf see https://github.com/aws-samples/aws2tf

resource "aws_eks_node_group" "ng2" {
  #ami_type       = "AL2_x86_64"
  depends_on     = [aws_launch_template.lt-ng2]
  cluster_name   = data.aws_eks_cluster.eks_cluster.name
  disk_size      = 0
  capacity_type = "SPOT"
  instance_types = [
    "m5.large",
    "m4.large",
    "m5a.large",
    "m5d.large",
    "m5n.large",
    "m5ad.large",
    "m5dn.large",
  ]
  labels = {
    "eks/cluster-name"   = data.aws_eks_cluster.eks_cluster.name
    "eks/nodegroup-name" = format("ng2-%s", data.aws_eks_cluster.eks_cluster.name)
  }
  node_group_name = format("ng2-%s", data.aws_eks_cluster.eks_cluster.name)
  node_role_arn   = data.terraform_remote_state.iam.outputs.nodegroup_role_arn
  #release_version = "1.17.11-20201007"
  subnet_ids = [
    data.terraform_remote_state.net.outputs.sub-priv1,
    data.terraform_remote_state.net.outputs.sub-priv2,
    data.terraform_remote_state.net.outputs.sub-priv3,
  ]
  tags = {
    "eks/cluster-name"                            = data.aws_eks_cluster.eks_cluster.name
    "eks/nodegroup-name"                          = format("ng2-%s", data.aws_eks_cluster.eks_cluster.name)
    "eks/nodegroup-type"                          = "managed"
    "eksctl.cluster.k8s.io/v1alpha1/cluster-name" = data.aws_eks_cluster.eks_cluster.name
    "eksnet"                                      = "net-main"
  }


  launch_template {
    name    = aws_launch_template.lt-ng2.name
    version = "1"
  }

  scaling_config {
    desired_size = 1
    max_size     = 3
    min_size     = 1
  }

  lifecycle {
    ignore_changes = [scaling_config[0].desired_size]
  }


  timeouts {}
}
